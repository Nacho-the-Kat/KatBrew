/*
 * This file is generated by jOOQ.
 */
package com.nacho.entities.jooq.db.tables.daos;


import com.nacho.entities.jooq.db.tables.Token;
import com.nacho.entities.jooq.db.tables.records.TokenRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenDao extends DAOImpl<TokenRecord, com.nacho.entities.jooq.db.tables.pojos.Token, String> {

    /**
     * Create a new TokenDao without any configuration
     */
    public TokenDao() {
        super(Token.TOKEN, com.nacho.entities.jooq.db.tables.pojos.Token.class);
    }

    /**
     * Create a new TokenDao with an attached configuration
     */
    public TokenDao(Configuration configuration) {
        super(Token.TOKEN, com.nacho.entities.jooq.db.tables.pojos.Token.class, configuration);
    }

    @Override
    public String getId(com.nacho.entities.jooq.db.tables.pojos.Token object) {
        return object.getTick();
    }

    /**
     * Fetch records that have <code>tick BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfTick(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.TICK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tick IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByTick(String... values) {
        return fetch(Token.TOKEN.TICK, values);
    }

    /**
     * Fetch a unique record that has <code>tick = value</code>
     */
    public com.nacho.entities.jooq.db.tables.pojos.Token fetchOneByTick(String value) {
        return fetchOne(Token.TOKEN.TICK, value);
    }

    /**
     * Fetch a unique record that has <code>tick = value</code>
     */
    public Optional<com.nacho.entities.jooq.db.tables.pojos.Token> fetchOptionalByTick(String value) {
        return fetchOptional(Token.TOKEN.TICK, value);
    }

    /**
     * Fetch records that have <code>max BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfMax(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.MAX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByMax(String... values) {
        return fetch(Token.TOKEN.MAX, values);
    }

    /**
     * Fetch records that have <code>lim BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfLim(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.LIM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lim IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByLim(String... values) {
        return fetch(Token.TOKEN.LIM, values);
    }

    /**
     * Fetch records that have <code>pre BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfPre(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.PRE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pre IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByPre(String... values) {
        return fetch(Token.TOKEN.PRE, values);
    }

    /**
     * Fetch records that have <code>to BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfTo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.TO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>to IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByTo(String... values) {
        return fetch(Token.TOKEN.TO, values);
    }

    /**
     * Fetch records that have <code>dec BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfDec(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.DEC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dec IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByDec(String... values) {
        return fetch(Token.TOKEN.DEC, values);
    }

    /**
     * Fetch records that have <code>minted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfMinted(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.MINTED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>minted IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByMinted(String... values) {
        return fetch(Token.TOKEN.MINTED, values);
    }

    /**
     * Fetch records that have <code>opScoreAdd BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfOpscoreadd(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.OPSCOREADD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opScoreAdd IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByOpscoreadd(String... values) {
        return fetch(Token.TOKEN.OPSCOREADD, values);
    }

    /**
     * Fetch records that have <code>opScoreMod BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfOpscoremod(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.OPSCOREMOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opScoreMod IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByOpscoremod(String... values) {
        return fetch(Token.TOKEN.OPSCOREMOD, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfState(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByState(String... values) {
        return fetch(Token.TOKEN.STATE, values);
    }

    /**
     * Fetch records that have <code>hashRev BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfHashrev(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.HASHREV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hashRev IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByHashrev(String... values) {
        return fetch(Token.TOKEN.HASHREV, values);
    }

    /**
     * Fetch records that have <code>mtsAdd BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfMtsadd(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.MTSADD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mtsAdd IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByMtsadd(String... values) {
        return fetch(Token.TOKEN.MTSADD, values);
    }

    /**
     * Fetch records that have <code>holderTotal BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfHoldertotal(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Token.TOKEN.HOLDERTOTAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>holderTotal IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByHoldertotal(Integer... values) {
        return fetch(Token.TOKEN.HOLDERTOTAL, values);
    }

    /**
     * Fetch records that have <code>transferTotal BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfTransfertotal(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Token.TOKEN.TRANSFERTOTAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transferTotal IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByTransfertotal(Integer... values) {
        return fetch(Token.TOKEN.TRANSFERTOTAL, values);
    }

    /**
     * Fetch records that have <code>mintTotal BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfMinttotal(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Token.TOKEN.MINTTOTAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mintTotal IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByMinttotal(Integer... values) {
        return fetch(Token.TOKEN.MINTTOTAL, values);
    }

    /**
     * Fetch records that have <code>lastUpdated BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfLastupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Token.TOKEN.LASTUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastUpdated IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByLastupdated(LocalDateTime... values) {
        return fetch(Token.TOKEN.LASTUPDATED, values);
    }

    /**
     * Fetch records that have <code>logo BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchRangeOfLogo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Token.TOKEN.LOGO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>logo IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Token> fetchByLogo(String... values) {
        return fetch(Token.TOKEN.LOGO, values);
    }
}
