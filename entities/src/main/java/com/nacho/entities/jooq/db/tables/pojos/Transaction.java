/*
 * This file is generated by jOOQ.
 */
package com.nacho.entities.jooq.db.tables.pojos;


import com.nacho.entities.jooq.db.tables.interfaces.ITransaction;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transaction implements ITransaction {

    private static final long serialVersionUID = 1L;

    private String hashrev;
    private String p;
    private String op;
    private String tick;
    private String amt;
    private String from;
    private String to;
    private String opscore;
    private String feerev;
    private String txaccept;
    private String opaccept;
    private String operror;
    private String checkpoint;
    private String mtsadd;
    private String mtsmod;
    private String max;
    private String lim;
    private String pre;
    private String dec;

    public Transaction() {}

    public Transaction(ITransaction value) {
        this.hashrev = value.getHashrev();
        this.p = value.getP();
        this.op = value.getOp();
        this.tick = value.getTick();
        this.amt = value.getAmt();
        this.from = value.getFrom();
        this.to = value.getTo();
        this.opscore = value.getOpscore();
        this.feerev = value.getFeerev();
        this.txaccept = value.getTxaccept();
        this.opaccept = value.getOpaccept();
        this.operror = value.getOperror();
        this.checkpoint = value.getCheckpoint();
        this.mtsadd = value.getMtsadd();
        this.mtsmod = value.getMtsmod();
        this.max = value.getMax();
        this.lim = value.getLim();
        this.pre = value.getPre();
        this.dec = value.getDec();
    }

    public Transaction(
        String hashrev,
        String p,
        String op,
        String tick,
        String amt,
        String from,
        String to,
        String opscore,
        String feerev,
        String txaccept,
        String opaccept,
        String operror,
        String checkpoint,
        String mtsadd,
        String mtsmod,
        String max,
        String lim,
        String pre,
        String dec
    ) {
        this.hashrev = hashrev;
        this.p = p;
        this.op = op;
        this.tick = tick;
        this.amt = amt;
        this.from = from;
        this.to = to;
        this.opscore = opscore;
        this.feerev = feerev;
        this.txaccept = txaccept;
        this.opaccept = opaccept;
        this.operror = operror;
        this.checkpoint = checkpoint;
        this.mtsadd = mtsadd;
        this.mtsmod = mtsmod;
        this.max = max;
        this.lim = lim;
        this.pre = pre;
        this.dec = dec;
    }

    /**
     * Getter for <code>public.Transaction.hashRev</code>.
     */
    @Override
    public String getHashrev() {
        return this.hashrev;
    }

    /**
     * Setter for <code>public.Transaction.hashRev</code>.
     */
    @Override
    public void setHashrev(String hashrev) {
        this.hashrev = hashrev;
    }

    /**
     * Getter for <code>public.Transaction.p</code>.
     */
    @Override
    public String getP() {
        return this.p;
    }

    /**
     * Setter for <code>public.Transaction.p</code>.
     */
    @Override
    public void setP(String p) {
        this.p = p;
    }

    /**
     * Getter for <code>public.Transaction.op</code>.
     */
    @Override
    public String getOp() {
        return this.op;
    }

    /**
     * Setter for <code>public.Transaction.op</code>.
     */
    @Override
    public void setOp(String op) {
        this.op = op;
    }

    /**
     * Getter for <code>public.Transaction.tick</code>.
     */
    @Override
    public String getTick() {
        return this.tick;
    }

    /**
     * Setter for <code>public.Transaction.tick</code>.
     */
    @Override
    public void setTick(String tick) {
        this.tick = tick;
    }

    /**
     * Getter for <code>public.Transaction.amt</code>.
     */
    @Override
    public String getAmt() {
        return this.amt;
    }

    /**
     * Setter for <code>public.Transaction.amt</code>.
     */
    @Override
    public void setAmt(String amt) {
        this.amt = amt;
    }

    /**
     * Getter for <code>public.Transaction.from</code>.
     */
    @Override
    public String getFrom() {
        return this.from;
    }

    /**
     * Setter for <code>public.Transaction.from</code>.
     */
    @Override
    public void setFrom(String from) {
        this.from = from;
    }

    /**
     * Getter for <code>public.Transaction.to</code>.
     */
    @Override
    public String getTo() {
        return this.to;
    }

    /**
     * Setter for <code>public.Transaction.to</code>.
     */
    @Override
    public void setTo(String to) {
        this.to = to;
    }

    /**
     * Getter for <code>public.Transaction.opScore</code>.
     */
    @Override
    public String getOpscore() {
        return this.opscore;
    }

    /**
     * Setter for <code>public.Transaction.opScore</code>.
     */
    @Override
    public void setOpscore(String opscore) {
        this.opscore = opscore;
    }

    /**
     * Getter for <code>public.Transaction.feeRev</code>.
     */
    @Override
    public String getFeerev() {
        return this.feerev;
    }

    /**
     * Setter for <code>public.Transaction.feeRev</code>.
     */
    @Override
    public void setFeerev(String feerev) {
        this.feerev = feerev;
    }

    /**
     * Getter for <code>public.Transaction.txAccept</code>.
     */
    @Override
    public String getTxaccept() {
        return this.txaccept;
    }

    /**
     * Setter for <code>public.Transaction.txAccept</code>.
     */
    @Override
    public void setTxaccept(String txaccept) {
        this.txaccept = txaccept;
    }

    /**
     * Getter for <code>public.Transaction.opAccept</code>.
     */
    @Override
    public String getOpaccept() {
        return this.opaccept;
    }

    /**
     * Setter for <code>public.Transaction.opAccept</code>.
     */
    @Override
    public void setOpaccept(String opaccept) {
        this.opaccept = opaccept;
    }

    /**
     * Getter for <code>public.Transaction.opError</code>.
     */
    @Override
    public String getOperror() {
        return this.operror;
    }

    /**
     * Setter for <code>public.Transaction.opError</code>.
     */
    @Override
    public void setOperror(String operror) {
        this.operror = operror;
    }

    /**
     * Getter for <code>public.Transaction.checkpoint</code>.
     */
    @Override
    public String getCheckpoint() {
        return this.checkpoint;
    }

    /**
     * Setter for <code>public.Transaction.checkpoint</code>.
     */
    @Override
    public void setCheckpoint(String checkpoint) {
        this.checkpoint = checkpoint;
    }

    /**
     * Getter for <code>public.Transaction.mtsAdd</code>.
     */
    @Override
    public String getMtsadd() {
        return this.mtsadd;
    }

    /**
     * Setter for <code>public.Transaction.mtsAdd</code>.
     */
    @Override
    public void setMtsadd(String mtsadd) {
        this.mtsadd = mtsadd;
    }

    /**
     * Getter for <code>public.Transaction.mtsMod</code>.
     */
    @Override
    public String getMtsmod() {
        return this.mtsmod;
    }

    /**
     * Setter for <code>public.Transaction.mtsMod</code>.
     */
    @Override
    public void setMtsmod(String mtsmod) {
        this.mtsmod = mtsmod;
    }

    /**
     * Getter for <code>public.Transaction.max</code>.
     */
    @Override
    public String getMax() {
        return this.max;
    }

    /**
     * Setter for <code>public.Transaction.max</code>.
     */
    @Override
    public void setMax(String max) {
        this.max = max;
    }

    /**
     * Getter for <code>public.Transaction.lim</code>.
     */
    @Override
    public String getLim() {
        return this.lim;
    }

    /**
     * Setter for <code>public.Transaction.lim</code>.
     */
    @Override
    public void setLim(String lim) {
        this.lim = lim;
    }

    /**
     * Getter for <code>public.Transaction.pre</code>.
     */
    @Override
    public String getPre() {
        return this.pre;
    }

    /**
     * Setter for <code>public.Transaction.pre</code>.
     */
    @Override
    public void setPre(String pre) {
        this.pre = pre;
    }

    /**
     * Getter for <code>public.Transaction.dec</code>.
     */
    @Override
    public String getDec() {
        return this.dec;
    }

    /**
     * Setter for <code>public.Transaction.dec</code>.
     */
    @Override
    public void setDec(String dec) {
        this.dec = dec;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Transaction other = (Transaction) obj;
        if (this.hashrev == null) {
            if (other.hashrev != null)
                return false;
        }
        else if (!this.hashrev.equals(other.hashrev))
            return false;
        if (this.p == null) {
            if (other.p != null)
                return false;
        }
        else if (!this.p.equals(other.p))
            return false;
        if (this.op == null) {
            if (other.op != null)
                return false;
        }
        else if (!this.op.equals(other.op))
            return false;
        if (this.tick == null) {
            if (other.tick != null)
                return false;
        }
        else if (!this.tick.equals(other.tick))
            return false;
        if (this.amt == null) {
            if (other.amt != null)
                return false;
        }
        else if (!this.amt.equals(other.amt))
            return false;
        if (this.from == null) {
            if (other.from != null)
                return false;
        }
        else if (!this.from.equals(other.from))
            return false;
        if (this.to == null) {
            if (other.to != null)
                return false;
        }
        else if (!this.to.equals(other.to))
            return false;
        if (this.opscore == null) {
            if (other.opscore != null)
                return false;
        }
        else if (!this.opscore.equals(other.opscore))
            return false;
        if (this.feerev == null) {
            if (other.feerev != null)
                return false;
        }
        else if (!this.feerev.equals(other.feerev))
            return false;
        if (this.txaccept == null) {
            if (other.txaccept != null)
                return false;
        }
        else if (!this.txaccept.equals(other.txaccept))
            return false;
        if (this.opaccept == null) {
            if (other.opaccept != null)
                return false;
        }
        else if (!this.opaccept.equals(other.opaccept))
            return false;
        if (this.operror == null) {
            if (other.operror != null)
                return false;
        }
        else if (!this.operror.equals(other.operror))
            return false;
        if (this.checkpoint == null) {
            if (other.checkpoint != null)
                return false;
        }
        else if (!this.checkpoint.equals(other.checkpoint))
            return false;
        if (this.mtsadd == null) {
            if (other.mtsadd != null)
                return false;
        }
        else if (!this.mtsadd.equals(other.mtsadd))
            return false;
        if (this.mtsmod == null) {
            if (other.mtsmod != null)
                return false;
        }
        else if (!this.mtsmod.equals(other.mtsmod))
            return false;
        if (this.max == null) {
            if (other.max != null)
                return false;
        }
        else if (!this.max.equals(other.max))
            return false;
        if (this.lim == null) {
            if (other.lim != null)
                return false;
        }
        else if (!this.lim.equals(other.lim))
            return false;
        if (this.pre == null) {
            if (other.pre != null)
                return false;
        }
        else if (!this.pre.equals(other.pre))
            return false;
        if (this.dec == null) {
            if (other.dec != null)
                return false;
        }
        else if (!this.dec.equals(other.dec))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.hashrev == null) ? 0 : this.hashrev.hashCode());
        result = prime * result + ((this.p == null) ? 0 : this.p.hashCode());
        result = prime * result + ((this.op == null) ? 0 : this.op.hashCode());
        result = prime * result + ((this.tick == null) ? 0 : this.tick.hashCode());
        result = prime * result + ((this.amt == null) ? 0 : this.amt.hashCode());
        result = prime * result + ((this.from == null) ? 0 : this.from.hashCode());
        result = prime * result + ((this.to == null) ? 0 : this.to.hashCode());
        result = prime * result + ((this.opscore == null) ? 0 : this.opscore.hashCode());
        result = prime * result + ((this.feerev == null) ? 0 : this.feerev.hashCode());
        result = prime * result + ((this.txaccept == null) ? 0 : this.txaccept.hashCode());
        result = prime * result + ((this.opaccept == null) ? 0 : this.opaccept.hashCode());
        result = prime * result + ((this.operror == null) ? 0 : this.operror.hashCode());
        result = prime * result + ((this.checkpoint == null) ? 0 : this.checkpoint.hashCode());
        result = prime * result + ((this.mtsadd == null) ? 0 : this.mtsadd.hashCode());
        result = prime * result + ((this.mtsmod == null) ? 0 : this.mtsmod.hashCode());
        result = prime * result + ((this.max == null) ? 0 : this.max.hashCode());
        result = prime * result + ((this.lim == null) ? 0 : this.lim.hashCode());
        result = prime * result + ((this.pre == null) ? 0 : this.pre.hashCode());
        result = prime * result + ((this.dec == null) ? 0 : this.dec.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Transaction (");

        sb.append(hashrev);
        sb.append(", ").append(p);
        sb.append(", ").append(op);
        sb.append(", ").append(tick);
        sb.append(", ").append(amt);
        sb.append(", ").append(from);
        sb.append(", ").append(to);
        sb.append(", ").append(opscore);
        sb.append(", ").append(feerev);
        sb.append(", ").append(txaccept);
        sb.append(", ").append(opaccept);
        sb.append(", ").append(operror);
        sb.append(", ").append(checkpoint);
        sb.append(", ").append(mtsadd);
        sb.append(", ").append(mtsmod);
        sb.append(", ").append(max);
        sb.append(", ").append(lim);
        sb.append(", ").append(pre);
        sb.append(", ").append(dec);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITransaction from) {
        setHashrev(from.getHashrev());
        setP(from.getP());
        setOp(from.getOp());
        setTick(from.getTick());
        setAmt(from.getAmt());
        setFrom(from.getFrom());
        setTo(from.getTo());
        setOpscore(from.getOpscore());
        setFeerev(from.getFeerev());
        setTxaccept(from.getTxaccept());
        setOpaccept(from.getOpaccept());
        setOperror(from.getOperror());
        setCheckpoint(from.getCheckpoint());
        setMtsadd(from.getMtsadd());
        setMtsmod(from.getMtsmod());
        setMax(from.getMax());
        setLim(from.getLim());
        setPre(from.getPre());
        setDec(from.getDec());
    }

    @Override
    public <E extends ITransaction> E into(E into) {
        into.from(this);
        return into;
    }
}
