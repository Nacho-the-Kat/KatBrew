/*
 * This file is generated by jOOQ.
 */
package com.nacho.entities.jooq.db.tables.daos;


import com.nacho.entities.jooq.db.tables.Whitelist;
import com.nacho.entities.jooq.db.tables.records.WhitelistRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WhitelistDao extends DAOImpl<WhitelistRecord, com.nacho.entities.jooq.db.tables.pojos.Whitelist, Integer> {

    /**
     * Create a new WhitelistDao without any configuration
     */
    public WhitelistDao() {
        super(Whitelist.WHITELIST, com.nacho.entities.jooq.db.tables.pojos.Whitelist.class);
    }

    /**
     * Create a new WhitelistDao with an attached configuration
     */
    public WhitelistDao(Configuration configuration) {
        super(Whitelist.WHITELIST, com.nacho.entities.jooq.db.tables.pojos.Whitelist.class, configuration);
    }

    @Override
    public Integer getId(com.nacho.entities.jooq.db.tables.pojos.Whitelist object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Whitelist.WHITELIST.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchById(Integer... values) {
        return fetch(Whitelist.WHITELIST.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.nacho.entities.jooq.db.tables.pojos.Whitelist fetchOneById(Integer value) {
        return fetchOne(Whitelist.WHITELIST.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchOptionalById(Integer value) {
        return fetchOptional(Whitelist.WHITELIST.ID, value);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Whitelist.WHITELIST.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchByAddress(String... values) {
        return fetch(Whitelist.WHITELIST.ADDRESS, values);
    }

    /**
     * Fetch a unique record that has <code>address = value</code>
     */
    public com.nacho.entities.jooq.db.tables.pojos.Whitelist fetchOneByAddress(String value) {
        return fetchOne(Whitelist.WHITELIST.ADDRESS, value);
    }

    /**
     * Fetch a unique record that has <code>address = value</code>
     */
    public Optional<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchOptionalByAddress(String value) {
        return fetchOptional(Whitelist.WHITELIST.ADDRESS, value);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchRangeOfUpdatedBy(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Whitelist.WHITELIST.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchByUpdatedBy(Integer... values) {
        return fetch(Whitelist.WHITELIST.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Whitelist.WHITELIST.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Whitelist.WHITELIST.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>previousAddress BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchRangeOfPreviousaddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Whitelist.WHITELIST.PREVIOUSADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>previousAddress IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchByPreviousaddress(String... values) {
        return fetch(Whitelist.WHITELIST.PREVIOUSADDRESS, values);
    }

    /**
     * Fetch records that have <code>signature BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchRangeOfSignature(String lowerInclusive, String upperInclusive) {
        return fetchRange(Whitelist.WHITELIST.SIGNATURE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>signature IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchBySignature(String... values) {
        return fetch(Whitelist.WHITELIST.SIGNATURE, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchRangeOfActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Whitelist.WHITELIST.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchByActive(Boolean... values) {
        return fetch(Whitelist.WHITELIST.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>change_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchRangeOfChangeType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Whitelist.WHITELIST.CHANGE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>change_type IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Whitelist> fetchByChangeType(String... values) {
        return fetch(Whitelist.WHITELIST.CHANGE_TYPE, values);
    }
}
