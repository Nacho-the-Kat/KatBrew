/*
 * This file is generated by jOOQ.
 */
package com.nacho.entities.jooq.db.tables.pojos;


import com.nacho.entities.jooq.db.tables.interfaces.IPricedata;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pricedata implements IPricedata {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String tick;
    private LocalDateTime timestamp;
    private Double valuekas;
    private Double valueusd;
    private Double change24h;

    public Pricedata() {}

    public Pricedata(IPricedata value) {
        this.id = value.getId();
        this.tick = value.getTick();
        this.timestamp = value.getTimestamp();
        this.valuekas = value.getValuekas();
        this.valueusd = value.getValueusd();
        this.change24h = value.getChange24h();
    }

    public Pricedata(
        Integer id,
        String tick,
        LocalDateTime timestamp,
        Double valuekas,
        Double valueusd,
        Double change24h
    ) {
        this.id = id;
        this.tick = tick;
        this.timestamp = timestamp;
        this.valuekas = valuekas;
        this.valueusd = valueusd;
        this.change24h = change24h;
    }

    /**
     * Getter for <code>public.PriceData.id</code>.
     */
    @Override
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.PriceData.id</code>.
     */
    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.PriceData.tick</code>.
     */
    @Override
    public String getTick() {
        return this.tick;
    }

    /**
     * Setter for <code>public.PriceData.tick</code>.
     */
    @Override
    public void setTick(String tick) {
        this.tick = tick;
    }

    /**
     * Getter for <code>public.PriceData.timestamp</code>.
     */
    @Override
    public LocalDateTime getTimestamp() {
        return this.timestamp;
    }

    /**
     * Setter for <code>public.PriceData.timestamp</code>.
     */
    @Override
    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * Getter for <code>public.PriceData.valueKAS</code>.
     */
    @Override
    public Double getValuekas() {
        return this.valuekas;
    }

    /**
     * Setter for <code>public.PriceData.valueKAS</code>.
     */
    @Override
    public void setValuekas(Double valuekas) {
        this.valuekas = valuekas;
    }

    /**
     * Getter for <code>public.PriceData.valueUSD</code>.
     */
    @Override
    public Double getValueusd() {
        return this.valueusd;
    }

    /**
     * Setter for <code>public.PriceData.valueUSD</code>.
     */
    @Override
    public void setValueusd(Double valueusd) {
        this.valueusd = valueusd;
    }

    /**
     * Getter for <code>public.PriceData.change24h</code>.
     */
    @Override
    public Double getChange24h() {
        return this.change24h;
    }

    /**
     * Setter for <code>public.PriceData.change24h</code>.
     */
    @Override
    public void setChange24h(Double change24h) {
        this.change24h = change24h;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Pricedata other = (Pricedata) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.tick == null) {
            if (other.tick != null)
                return false;
        }
        else if (!this.tick.equals(other.tick))
            return false;
        if (this.timestamp == null) {
            if (other.timestamp != null)
                return false;
        }
        else if (!this.timestamp.equals(other.timestamp))
            return false;
        if (this.valuekas == null) {
            if (other.valuekas != null)
                return false;
        }
        else if (!this.valuekas.equals(other.valuekas))
            return false;
        if (this.valueusd == null) {
            if (other.valueusd != null)
                return false;
        }
        else if (!this.valueusd.equals(other.valueusd))
            return false;
        if (this.change24h == null) {
            if (other.change24h != null)
                return false;
        }
        else if (!this.change24h.equals(other.change24h))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.tick == null) ? 0 : this.tick.hashCode());
        result = prime * result + ((this.timestamp == null) ? 0 : this.timestamp.hashCode());
        result = prime * result + ((this.valuekas == null) ? 0 : this.valuekas.hashCode());
        result = prime * result + ((this.valueusd == null) ? 0 : this.valueusd.hashCode());
        result = prime * result + ((this.change24h == null) ? 0 : this.change24h.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Pricedata (");

        sb.append(id);
        sb.append(", ").append(tick);
        sb.append(", ").append(timestamp);
        sb.append(", ").append(valuekas);
        sb.append(", ").append(valueusd);
        sb.append(", ").append(change24h);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPricedata from) {
        setId(from.getId());
        setTick(from.getTick());
        setTimestamp(from.getTimestamp());
        setValuekas(from.getValuekas());
        setValueusd(from.getValueusd());
        setChange24h(from.getChange24h());
    }

    @Override
    public <E extends IPricedata> E into(E into) {
        into.from(this);
        return into;
    }
}
