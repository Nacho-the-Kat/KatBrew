/*
 * This file is generated by jOOQ.
 */
package com.nacho.entities.jooq.db.tables.daos;


import com.nacho.entities.jooq.db.tables.Tokens;
import com.nacho.entities.jooq.db.tables.records.TokensRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokensDao extends DAOImpl<TokensRecord, com.nacho.entities.jooq.db.tables.pojos.Tokens, Integer> {

    /**
     * Create a new TokensDao without any configuration
     */
    public TokensDao() {
        super(Tokens.TOKENS, com.nacho.entities.jooq.db.tables.pojos.Tokens.class);
    }

    /**
     * Create a new TokensDao with an attached configuration
     */
    public TokensDao(Configuration configuration) {
        super(Tokens.TOKENS, com.nacho.entities.jooq.db.tables.pojos.Tokens.class, configuration);
    }

    @Override
    public Integer getId(com.nacho.entities.jooq.db.tables.pojos.Tokens object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Tokens> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Tokens.TOKENS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Tokens> fetchById(Integer... values) {
        return fetch(Tokens.TOKENS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.nacho.entities.jooq.db.tables.pojos.Tokens fetchOneById(Integer value) {
        return fetchOne(Tokens.TOKENS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.nacho.entities.jooq.db.tables.pojos.Tokens> fetchOptionalById(Integer value) {
        return fetchOptional(Tokens.TOKENS.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Tokens> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tokens.TOKENS.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Tokens> fetchByUsername(String... values) {
        return fetch(Tokens.TOKENS.USERNAME, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Tokens> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tokens.TOKENS.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Tokens> fetchByPassword(String... values) {
        return fetch(Tokens.TOKENS.PASSWORD, values);
    }
}
