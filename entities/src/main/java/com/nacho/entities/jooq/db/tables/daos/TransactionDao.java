/*
 * This file is generated by jOOQ.
 */
package com.nacho.entities.jooq.db.tables.daos;


import com.nacho.entities.jooq.db.tables.Transaction;
import com.nacho.entities.jooq.db.tables.records.TransactionRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionDao extends DAOImpl<TransactionRecord, com.nacho.entities.jooq.db.tables.pojos.Transaction, String> {

    /**
     * Create a new TransactionDao without any configuration
     */
    public TransactionDao() {
        super(Transaction.TRANSACTION, com.nacho.entities.jooq.db.tables.pojos.Transaction.class);
    }

    /**
     * Create a new TransactionDao with an attached configuration
     */
    public TransactionDao(Configuration configuration) {
        super(Transaction.TRANSACTION, com.nacho.entities.jooq.db.tables.pojos.Transaction.class, configuration);
    }

    @Override
    public String getId(com.nacho.entities.jooq.db.tables.pojos.Transaction object) {
        return object.getHashrev();
    }

    /**
     * Fetch records that have <code>hashRev BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfHashrev(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.HASHREV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hashRev IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByHashrev(String... values) {
        return fetch(Transaction.TRANSACTION.HASHREV, values);
    }

    /**
     * Fetch a unique record that has <code>hashRev = value</code>
     */
    public com.nacho.entities.jooq.db.tables.pojos.Transaction fetchOneByHashrev(String value) {
        return fetchOne(Transaction.TRANSACTION.HASHREV, value);
    }

    /**
     * Fetch a unique record that has <code>hashRev = value</code>
     */
    public Optional<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchOptionalByHashrev(String value) {
        return fetchOptional(Transaction.TRANSACTION.HASHREV, value);
    }

    /**
     * Fetch records that have <code>p BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfP(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.P, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>p IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByP(String... values) {
        return fetch(Transaction.TRANSACTION.P, values);
    }

    /**
     * Fetch records that have <code>op BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfOp(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.OP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>op IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByOp(String... values) {
        return fetch(Transaction.TRANSACTION.OP, values);
    }

    /**
     * Fetch records that have <code>tick BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfTick(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.TICK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tick IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByTick(String... values) {
        return fetch(Transaction.TRANSACTION.TICK, values);
    }

    /**
     * Fetch records that have <code>amt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfAmt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.AMT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amt IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByAmt(String... values) {
        return fetch(Transaction.TRANSACTION.AMT, values);
    }

    /**
     * Fetch records that have <code>from BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfFrom(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.FROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>from IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByFrom(String... values) {
        return fetch(Transaction.TRANSACTION.FROM, values);
    }

    /**
     * Fetch records that have <code>to BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfTo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.TO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>to IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByTo(String... values) {
        return fetch(Transaction.TRANSACTION.TO, values);
    }

    /**
     * Fetch records that have <code>opScore BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfOpscore(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.OPSCORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opScore IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByOpscore(String... values) {
        return fetch(Transaction.TRANSACTION.OPSCORE, values);
    }

    /**
     * Fetch records that have <code>feeRev BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfFeerev(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.FEEREV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>feeRev IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByFeerev(String... values) {
        return fetch(Transaction.TRANSACTION.FEEREV, values);
    }

    /**
     * Fetch records that have <code>txAccept BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfTxaccept(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.TXACCEPT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>txAccept IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByTxaccept(String... values) {
        return fetch(Transaction.TRANSACTION.TXACCEPT, values);
    }

    /**
     * Fetch records that have <code>opAccept BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfOpaccept(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.OPACCEPT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opAccept IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByOpaccept(String... values) {
        return fetch(Transaction.TRANSACTION.OPACCEPT, values);
    }

    /**
     * Fetch records that have <code>opError BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfOperror(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.OPERROR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opError IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByOperror(String... values) {
        return fetch(Transaction.TRANSACTION.OPERROR, values);
    }

    /**
     * Fetch records that have <code>checkpoint BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfCheckpoint(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.CHECKPOINT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>checkpoint IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByCheckpoint(String... values) {
        return fetch(Transaction.TRANSACTION.CHECKPOINT, values);
    }

    /**
     * Fetch records that have <code>mtsAdd BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfMtsadd(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.MTSADD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mtsAdd IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByMtsadd(String... values) {
        return fetch(Transaction.TRANSACTION.MTSADD, values);
    }

    /**
     * Fetch records that have <code>mtsMod BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfMtsmod(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.MTSMOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mtsMod IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByMtsmod(String... values) {
        return fetch(Transaction.TRANSACTION.MTSMOD, values);
    }

    /**
     * Fetch records that have <code>max BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfMax(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.MAX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByMax(String... values) {
        return fetch(Transaction.TRANSACTION.MAX, values);
    }

    /**
     * Fetch records that have <code>lim BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfLim(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.LIM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lim IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByLim(String... values) {
        return fetch(Transaction.TRANSACTION.LIM, values);
    }

    /**
     * Fetch records that have <code>pre BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfPre(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.PRE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pre IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByPre(String... values) {
        return fetch(Transaction.TRANSACTION.PRE, values);
    }

    /**
     * Fetch records that have <code>dec BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchRangeOfDec(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transaction.TRANSACTION.DEC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dec IN (values)</code>
     */
    public List<com.nacho.entities.jooq.db.tables.pojos.Transaction> fetchByDec(String... values) {
        return fetch(Transaction.TRANSACTION.DEC, values);
    }
}
