/*
 * This file is generated by jOOQ.
 */
package com.nacho.entities.jooq.db.tables.pojos;


import com.nacho.entities.jooq.db.tables.interfaces.IWhitelist;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Whitelist implements IWhitelist {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String address;
    private Integer updatedBy;
    private LocalDateTime updatedAt;
    private String previousaddress;
    private String signature;
    private Boolean active;
    private String changeType;

    public Whitelist() {}

    public Whitelist(IWhitelist value) {
        this.id = value.getId();
        this.address = value.getAddress();
        this.updatedBy = value.getUpdatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.previousaddress = value.getPreviousaddress();
        this.signature = value.getSignature();
        this.active = value.getActive();
        this.changeType = value.getChangeType();
    }

    public Whitelist(
        Integer id,
        String address,
        Integer updatedBy,
        LocalDateTime updatedAt,
        String previousaddress,
        String signature,
        Boolean active,
        String changeType
    ) {
        this.id = id;
        this.address = address;
        this.updatedBy = updatedBy;
        this.updatedAt = updatedAt;
        this.previousaddress = previousaddress;
        this.signature = signature;
        this.active = active;
        this.changeType = changeType;
    }

    /**
     * Getter for <code>public.Whitelist.id</code>.
     */
    @Override
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.Whitelist.id</code>.
     */
    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.Whitelist.address</code>.
     */
    @Override
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>public.Whitelist.address</code>.
     */
    @Override
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for <code>public.Whitelist.updated_by</code>.
     */
    @Override
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>public.Whitelist.updated_by</code>.
     */
    @Override
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>public.Whitelist.updated_at</code>.
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.Whitelist.updated_at</code>.
     */
    @Override
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.Whitelist.previousAddress</code>.
     */
    @Override
    public String getPreviousaddress() {
        return this.previousaddress;
    }

    /**
     * Setter for <code>public.Whitelist.previousAddress</code>.
     */
    @Override
    public void setPreviousaddress(String previousaddress) {
        this.previousaddress = previousaddress;
    }

    /**
     * Getter for <code>public.Whitelist.signature</code>.
     */
    @Override
    public String getSignature() {
        return this.signature;
    }

    /**
     * Setter for <code>public.Whitelist.signature</code>.
     */
    @Override
    public void setSignature(String signature) {
        this.signature = signature;
    }

    /**
     * Getter for <code>public.Whitelist.active</code>.
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>public.Whitelist.active</code>.
     */
    @Override
    public void setActive(Boolean active) {
        this.active = active;
    }

    /**
     * Getter for <code>public.Whitelist.change_type</code>.
     */
    @Override
    public String getChangeType() {
        return this.changeType;
    }

    /**
     * Setter for <code>public.Whitelist.change_type</code>.
     */
    @Override
    public void setChangeType(String changeType) {
        this.changeType = changeType;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Whitelist other = (Whitelist) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.previousaddress == null) {
            if (other.previousaddress != null)
                return false;
        }
        else if (!this.previousaddress.equals(other.previousaddress))
            return false;
        if (this.signature == null) {
            if (other.signature != null)
                return false;
        }
        else if (!this.signature.equals(other.signature))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        }
        else if (!this.active.equals(other.active))
            return false;
        if (this.changeType == null) {
            if (other.changeType != null)
                return false;
        }
        else if (!this.changeType.equals(other.changeType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.previousaddress == null) ? 0 : this.previousaddress.hashCode());
        result = prime * result + ((this.signature == null) ? 0 : this.signature.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.changeType == null) ? 0 : this.changeType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Whitelist (");

        sb.append(id);
        sb.append(", ").append(address);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(previousaddress);
        sb.append(", ").append(signature);
        sb.append(", ").append(active);
        sb.append(", ").append(changeType);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWhitelist from) {
        setId(from.getId());
        setAddress(from.getAddress());
        setUpdatedBy(from.getUpdatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setPreviousaddress(from.getPreviousaddress());
        setSignature(from.getSignature());
        setActive(from.getActive());
        setChangeType(from.getChangeType());
    }

    @Override
    public <E extends IWhitelist> E into(E into) {
        into.from(this);
        return into;
    }
}
