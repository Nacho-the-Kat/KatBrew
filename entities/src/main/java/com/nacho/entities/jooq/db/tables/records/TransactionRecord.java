/*
 * This file is generated by jOOQ.
 */
package com.nacho.entities.jooq.db.tables.records;


import com.nacho.entities.jooq.db.tables.Transaction;
import com.nacho.entities.jooq.db.tables.interfaces.ITransaction;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements ITransaction {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.Transaction.hashRev</code>.
     */
    @Override
    public void setHashrev(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.Transaction.hashRev</code>.
     */
    @Override
    public String getHashrev() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.Transaction.p</code>.
     */
    @Override
    public void setP(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.Transaction.p</code>.
     */
    @Override
    public String getP() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.Transaction.op</code>.
     */
    @Override
    public void setOp(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.Transaction.op</code>.
     */
    @Override
    public String getOp() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.Transaction.tick</code>.
     */
    @Override
    public void setTick(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.Transaction.tick</code>.
     */
    @Override
    public String getTick() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.Transaction.amt</code>.
     */
    @Override
    public void setAmt(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.Transaction.amt</code>.
     */
    @Override
    public String getAmt() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.Transaction.from</code>.
     */
    @Override
    public void setFrom(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.Transaction.from</code>.
     */
    @Override
    public String getFrom() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.Transaction.to</code>.
     */
    @Override
    public void setTo(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.Transaction.to</code>.
     */
    @Override
    public String getTo() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.Transaction.opScore</code>.
     */
    @Override
    public void setOpscore(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.Transaction.opScore</code>.
     */
    @Override
    public String getOpscore() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.Transaction.feeRev</code>.
     */
    @Override
    public void setFeerev(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.Transaction.feeRev</code>.
     */
    @Override
    public String getFeerev() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.Transaction.txAccept</code>.
     */
    @Override
    public void setTxaccept(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.Transaction.txAccept</code>.
     */
    @Override
    public String getTxaccept() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.Transaction.opAccept</code>.
     */
    @Override
    public void setOpaccept(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.Transaction.opAccept</code>.
     */
    @Override
    public String getOpaccept() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.Transaction.opError</code>.
     */
    @Override
    public void setOperror(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.Transaction.opError</code>.
     */
    @Override
    public String getOperror() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.Transaction.checkpoint</code>.
     */
    @Override
    public void setCheckpoint(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.Transaction.checkpoint</code>.
     */
    @Override
    public String getCheckpoint() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.Transaction.mtsAdd</code>.
     */
    @Override
    public void setMtsadd(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.Transaction.mtsAdd</code>.
     */
    @Override
    public String getMtsadd() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.Transaction.mtsMod</code>.
     */
    @Override
    public void setMtsmod(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.Transaction.mtsMod</code>.
     */
    @Override
    public String getMtsmod() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.Transaction.max</code>.
     */
    @Override
    public void setMax(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.Transaction.max</code>.
     */
    @Override
    public String getMax() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.Transaction.lim</code>.
     */
    @Override
    public void setLim(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.Transaction.lim</code>.
     */
    @Override
    public String getLim() {
        return (String) get(16);
    }

    /**
     * Setter for <code>public.Transaction.pre</code>.
     */
    @Override
    public void setPre(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.Transaction.pre</code>.
     */
    @Override
    public String getPre() {
        return (String) get(17);
    }

    /**
     * Setter for <code>public.Transaction.dec</code>.
     */
    @Override
    public void setDec(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.Transaction.dec</code>.
     */
    @Override
    public String getDec() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITransaction from) {
        setHashrev(from.getHashrev());
        setP(from.getP());
        setOp(from.getOp());
        setTick(from.getTick());
        setAmt(from.getAmt());
        setFrom(from.getFrom());
        setTo(from.getTo());
        setOpscore(from.getOpscore());
        setFeerev(from.getFeerev());
        setTxaccept(from.getTxaccept());
        setOpaccept(from.getOpaccept());
        setOperror(from.getOperror());
        setCheckpoint(from.getCheckpoint());
        setMtsadd(from.getMtsadd());
        setMtsmod(from.getMtsmod());
        setMax(from.getMax());
        setLim(from.getLim());
        setPre(from.getPre());
        setDec(from.getDec());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ITransaction> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(String hashrev, String p, String op, String tick, String amt, String from, String to, String opscore, String feerev, String txaccept, String opaccept, String operror, String checkpoint, String mtsadd, String mtsmod, String max, String lim, String pre, String dec) {
        super(Transaction.TRANSACTION);

        setHashrev(hashrev);
        setP(p);
        setOp(op);
        setTick(tick);
        setAmt(amt);
        setFrom(from);
        setTo(to);
        setOpscore(opscore);
        setFeerev(feerev);
        setTxaccept(txaccept);
        setOpaccept(opaccept);
        setOperror(operror);
        setCheckpoint(checkpoint);
        setMtsadd(mtsadd);
        setMtsmod(mtsmod);
        setMax(max);
        setLim(lim);
        setPre(pre);
        setDec(dec);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(com.nacho.entities.jooq.db.tables.pojos.Transaction value) {
        super(Transaction.TRANSACTION);

        if (value != null) {
            setHashrev(value.getHashrev());
            setP(value.getP());
            setOp(value.getOp());
            setTick(value.getTick());
            setAmt(value.getAmt());
            setFrom(value.getFrom());
            setTo(value.getTo());
            setOpscore(value.getOpscore());
            setFeerev(value.getFeerev());
            setTxaccept(value.getTxaccept());
            setOpaccept(value.getOpaccept());
            setOperror(value.getOperror());
            setCheckpoint(value.getCheckpoint());
            setMtsadd(value.getMtsadd());
            setMtsmod(value.getMtsmod());
            setMax(value.getMax());
            setLim(value.getLim());
            setPre(value.getPre());
            setDec(value.getDec());
            resetChangedOnNotNull();
        }
    }
}
