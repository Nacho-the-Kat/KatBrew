/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.daos;


import com.katbrew.entities.jooq.db.tables.NftCollectionEntry;
import com.katbrew.entities.jooq.db.tables.records.NftCollectionEntryRecord;

import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.AutoConverter;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NftCollectionEntryDao extends DAOImpl<NftCollectionEntryRecord, com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry, BigInteger> {

    /**
     * Create a new NftCollectionEntryDao without any configuration
     */
    public NftCollectionEntryDao() {
        super(NftCollectionEntry.NFT_COLLECTION_ENTRY, com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry.class);
    }

    /**
     * Create a new NftCollectionEntryDao with an attached configuration
     */
    public NftCollectionEntryDao(Configuration configuration) {
        super(NftCollectionEntry.NFT_COLLECTION_ENTRY, com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry.class, configuration);
    }

    @Override
    public BigInteger getId(com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchRangeOfId(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(NftCollectionEntry.NFT_COLLECTION_ENTRY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchById(BigInteger... values) {
        return fetch(NftCollectionEntry.NFT_COLLECTION_ENTRY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry fetchOneById(BigInteger value) {
        return fetchOne(NftCollectionEntry.NFT_COLLECTION_ENTRY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchOptionalById(BigInteger value) {
        return fetchOptional(NftCollectionEntry.NFT_COLLECTION_ENTRY.ID, value);
    }

    /**
     * Fetch records that have <code>fk_collection BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchRangeOfFkCollection(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(NftCollectionEntry.NFT_COLLECTION_ENTRY.FK_COLLECTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fk_collection IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchByFkCollection(BigInteger... values) {
        return fetch(NftCollectionEntry.NFT_COLLECTION_ENTRY.FK_COLLECTION, values);
    }

    /**
     * Fetch records that have <code>edition BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchRangeOfEdition(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(NftCollectionEntry.NFT_COLLECTION_ENTRY.EDITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edition IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchByEdition(Integer... values) {
        return fetch(NftCollectionEntry.NFT_COLLECTION_ENTRY.EDITION, values);
    }

    /**
     * Fetch records that have <code>image BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchRangeOfImage(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftCollectionEntry.NFT_COLLECTION_ENTRY.IMAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>image IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchByImage(String... values) {
        return fetch(NftCollectionEntry.NFT_COLLECTION_ENTRY.IMAGE, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftCollectionEntry.NFT_COLLECTION_ENTRY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchByName(String... values) {
        return fetch(NftCollectionEntry.NFT_COLLECTION_ENTRY.NAME, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftCollectionEntry.NFT_COLLECTION_ENTRY.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchByDescription(String... values) {
        return fetch(NftCollectionEntry.NFT_COLLECTION_ENTRY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>attributes BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchRangeOfAttributes(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftCollectionEntry.NFT_COLLECTION_ENTRY.ATTRIBUTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>attributes IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry> fetchByAttributes(String... values) {
        return fetch(NftCollectionEntry.NFT_COLLECTION_ENTRY.ATTRIBUTES, values);
    }
}
