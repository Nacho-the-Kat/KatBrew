/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.records;


import com.katbrew.entities.jooq.db.tables.NftCollectionInfo;
import com.katbrew.entities.jooq.db.tables.interfaces.INftCollectionInfo;

import java.math.BigInteger;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NftCollectionInfoRecord extends UpdatableRecordImpl<NftCollectionInfoRecord> implements INftCollectionInfo {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.nft_collection_info.id</code>.
     */
    @Override
    public void setId(BigInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.nft_collection_info.id</code>.
     */
    @Override
    public BigInteger getId() {
        return (BigInteger) get(0);
    }

    /**
     * Setter for <code>public.nft_collection_info.fk_collection</code>.
     */
    @Override
    public void setFkCollection(BigInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.nft_collection_info.fk_collection</code>.
     */
    @Override
    public BigInteger getFkCollection() {
        return (BigInteger) get(1);
    }

    /**
     * Setter for <code>public.nft_collection_info.name</code>.
     */
    @Override
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.nft_collection_info.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.nft_collection_info.tick</code>.
     */
    @Override
    public void setTick(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.nft_collection_info.tick</code>.
     */
    @Override
    public String getTick() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.nft_collection_info.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.nft_collection_info.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.nft_collection_info.image</code>.
     */
    @Override
    public void setImage(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.nft_collection_info.image</code>.
     */
    @Override
    public String getImage() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.nft_collection_info.properties</code>.
     */
    @Override
    public void setProperties(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.nft_collection_info.properties</code>.
     */
    @Override
    public String getProperties() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.nft_collection_info.extensions</code>.
     */
    @Override
    public void setExtensions(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.nft_collection_info.extensions</code>.
     */
    @Override
    public String getExtensions() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<BigInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(INftCollectionInfo from) {
        setId(from.getId());
        setFkCollection(from.getFkCollection());
        setName(from.getName());
        setTick(from.getTick());
        setDescription(from.getDescription());
        setImage(from.getImage());
        setProperties(from.getProperties());
        setExtensions(from.getExtensions());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends INftCollectionInfo> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NftCollectionInfoRecord
     */
    public NftCollectionInfoRecord() {
        super(NftCollectionInfo.NFT_COLLECTION_INFO);
    }

    /**
     * Create a detached, initialised NftCollectionInfoRecord
     */
    public NftCollectionInfoRecord(BigInteger id, BigInteger fkCollection, String name, String tick, String description, String image, String properties, String extensions) {
        super(NftCollectionInfo.NFT_COLLECTION_INFO);

        setId(id);
        setFkCollection(fkCollection);
        setName(name);
        setTick(tick);
        setDescription(description);
        setImage(image);
        setProperties(properties);
        setExtensions(extensions);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised NftCollectionInfoRecord
     */
    public NftCollectionInfoRecord(com.katbrew.entities.jooq.db.tables.pojos.NftCollectionInfo value) {
        super(NftCollectionInfo.NFT_COLLECTION_INFO);

        if (value != null) {
            setId(value.getId());
            setFkCollection(value.getFkCollection());
            setName(value.getName());
            setTick(value.getTick());
            setDescription(value.getDescription());
            setImage(value.getImage());
            setProperties(value.getProperties());
            setExtensions(value.getExtensions());
            resetChangedOnNotNull();
        }
    }
}
