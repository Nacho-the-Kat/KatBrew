/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.records;


import com.katbrew.entities.jooq.db.tables.Token;
import com.katbrew.entities.jooq.db.tables.interfaces.IToken;

import java.math.BigInteger;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenRecord extends UpdatableRecordImpl<TokenRecord> implements IToken {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.Token.id</code>.
     */
    @Override
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.Token.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.Token.tick</code>.
     */
    @Override
    public void setTick(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.Token.tick</code>.
     */
    @Override
    public String getTick() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.Token.max</code>.
     */
    @Override
    public void setMax(BigInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.Token.max</code>.
     */
    @Override
    public BigInteger getMax() {
        return (BigInteger) get(2);
    }

    /**
     * Setter for <code>public.Token.lim</code>.
     */
    @Override
    public void setLim(BigInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.Token.lim</code>.
     */
    @Override
    public BigInteger getLim() {
        return (BigInteger) get(3);
    }

    /**
     * Setter for <code>public.Token.pre</code>.
     */
    @Override
    public void setPre(BigInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.Token.pre</code>.
     */
    @Override
    public BigInteger getPre() {
        return (BigInteger) get(4);
    }

    /**
     * Setter for <code>public.Token.mts_add</code>.
     */
    @Override
    public void setMtsAdd(BigInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.Token.mts_add</code>.
     */
    @Override
    public BigInteger getMtsAdd() {
        return (BigInteger) get(5);
    }

    /**
     * Setter for <code>public.Token.minted</code>.
     */
    @Override
    public void setMinted(BigInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.Token.minted</code>.
     */
    @Override
    public BigInteger getMinted() {
        return (BigInteger) get(6);
    }

    /**
     * Setter for <code>public.Token.holder_total</code>.
     */
    @Override
    public void setHolderTotal(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.Token.holder_total</code>.
     */
    @Override
    public Integer getHolderTotal() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.Token.mint_total</code>.
     */
    @Override
    public void setMintTotal(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.Token.mint_total</code>.
     */
    @Override
    public Integer getMintTotal() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.Token.transfer_total</code>.
     */
    @Override
    public void setTransferTotal(BigInteger value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.Token.transfer_total</code>.
     */
    @Override
    public BigInteger getTransferTotal() {
        return (BigInteger) get(9);
    }

    /**
     * Setter for <code>public.Token.dec</code>.
     */
    @Override
    public void setDec(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.Token.dec</code>.
     */
    @Override
    public Integer getDec() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>public.Token.state</code>.
     */
    @Override
    public void setState(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.Token.state</code>.
     */
    @Override
    public String getState() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.Token.hash_rev</code>.
     */
    @Override
    public void setHashRev(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.Token.hash_rev</code>.
     */
    @Override
    public String getHashRev() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.Token.op_score_mod</code>.
     */
    @Override
    public void setOpScoreMod(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.Token.op_score_mod</code>.
     */
    @Override
    public String getOpScoreMod() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.Token.op_score_add</code>.
     */
    @Override
    public void setOpScoreAdd(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.Token.op_score_add</code>.
     */
    @Override
    public String getOpScoreAdd() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.Token.to</code>.
     */
    @Override
    public void setTo(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.Token.to</code>.
     */
    @Override
    public String getTo() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.Token.logo</code>.
     */
    @Override
    public void setLogo(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.Token.logo</code>.
     */
    @Override
    public String getLogo() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IToken from) {
        setId(from.getId());
        setTick(from.getTick());
        setMax(from.getMax());
        setLim(from.getLim());
        setPre(from.getPre());
        setMtsAdd(from.getMtsAdd());
        setMinted(from.getMinted());
        setHolderTotal(from.getHolderTotal());
        setMintTotal(from.getMintTotal());
        setTransferTotal(from.getTransferTotal());
        setDec(from.getDec());
        setState(from.getState());
        setHashRev(from.getHashRev());
        setOpScoreMod(from.getOpScoreMod());
        setOpScoreAdd(from.getOpScoreAdd());
        setTo(from.getTo());
        setLogo(from.getLogo());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IToken> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TokenRecord
     */
    public TokenRecord() {
        super(Token.TOKEN);
    }

    /**
     * Create a detached, initialised TokenRecord
     */
    public TokenRecord(Integer id, String tick, BigInteger max, BigInteger lim, BigInteger pre, BigInteger mtsAdd, BigInteger minted, Integer holderTotal, Integer mintTotal, BigInteger transferTotal, Integer dec, String state, String hashRev, String opScoreMod, String opScoreAdd, String to, String logo) {
        super(Token.TOKEN);

        setId(id);
        setTick(tick);
        setMax(max);
        setLim(lim);
        setPre(pre);
        setMtsAdd(mtsAdd);
        setMinted(minted);
        setHolderTotal(holderTotal);
        setMintTotal(mintTotal);
        setTransferTotal(transferTotal);
        setDec(dec);
        setState(state);
        setHashRev(hashRev);
        setOpScoreMod(opScoreMod);
        setOpScoreAdd(opScoreAdd);
        setTo(to);
        setLogo(logo);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TokenRecord
     */
    public TokenRecord(com.katbrew.entities.jooq.db.tables.pojos.Token value) {
        super(Token.TOKEN);

        if (value != null) {
            setId(value.getId());
            setTick(value.getTick());
            setMax(value.getMax());
            setLim(value.getLim());
            setPre(value.getPre());
            setMtsAdd(value.getMtsAdd());
            setMinted(value.getMinted());
            setHolderTotal(value.getHolderTotal());
            setMintTotal(value.getMintTotal());
            setTransferTotal(value.getTransferTotal());
            setDec(value.getDec());
            setState(value.getState());
            setHashRev(value.getHashRev());
            setOpScoreMod(value.getOpScoreMod());
            setOpScoreAdd(value.getOpScoreAdd());
            setTo(value.getTo());
            setLogo(value.getLogo());
            resetChangedOnNotNull();
        }
    }
}
