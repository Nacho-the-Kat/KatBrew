/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.pojos;


import com.katbrew.entities.jooq.db.tables.interfaces.ITopHolder;

import java.math.BigInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TopHolder implements ITopHolder {

    private static final long serialVersionUID = 1L;

    private BigInteger id;
    private String address;
    private Integer tokenCount;
    private String balances;

    public TopHolder() {}

    public TopHolder(ITopHolder value) {
        this.id = value.getId();
        this.address = value.getAddress();
        this.tokenCount = value.getTokenCount();
        this.balances = value.getBalances();
    }

    public TopHolder(
        BigInteger id,
        String address,
        Integer tokenCount,
        String balances
    ) {
        this.id = id;
        this.address = address;
        this.tokenCount = tokenCount;
        this.balances = balances;
    }

    /**
     * Getter for <code>public.Top_Holder.id</code>.
     */
    @Override
    public BigInteger getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.Top_Holder.id</code>.
     */
    @Override
    public void setId(BigInteger id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.Top_Holder.address</code>.
     */
    @Override
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>public.Top_Holder.address</code>.
     */
    @Override
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for <code>public.Top_Holder.token_count</code>.
     */
    @Override
    public Integer getTokenCount() {
        return this.tokenCount;
    }

    /**
     * Setter for <code>public.Top_Holder.token_count</code>.
     */
    @Override
    public void setTokenCount(Integer tokenCount) {
        this.tokenCount = tokenCount;
    }

    /**
     * Getter for <code>public.Top_Holder.balances</code>.
     */
    @Override
    public String getBalances() {
        return this.balances;
    }

    /**
     * Setter for <code>public.Top_Holder.balances</code>.
     */
    @Override
    public void setBalances(String balances) {
        this.balances = balances;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TopHolder other = (TopHolder) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.tokenCount == null) {
            if (other.tokenCount != null)
                return false;
        }
        else if (!this.tokenCount.equals(other.tokenCount))
            return false;
        if (this.balances == null) {
            if (other.balances != null)
                return false;
        }
        else if (!this.balances.equals(other.balances))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.tokenCount == null) ? 0 : this.tokenCount.hashCode());
        result = prime * result + ((this.balances == null) ? 0 : this.balances.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TopHolder (");

        sb.append(id);
        sb.append(", ").append(address);
        sb.append(", ").append(tokenCount);
        sb.append(", ").append(balances);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITopHolder from) {
        setId(from.getId());
        setAddress(from.getAddress());
        setTokenCount(from.getTokenCount());
        setBalances(from.getBalances());
    }

    @Override
    public <E extends ITopHolder> E into(E into) {
        into.from(this);
        return into;
    }
}
