/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.records;


import com.katbrew.entities.jooq.db.tables.NftBalance;
import com.katbrew.entities.jooq.db.tables.interfaces.INftBalance;

import java.math.BigInteger;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NftBalanceRecord extends UpdatableRecordImpl<NftBalanceRecord> implements INftBalance {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.nft_balance.id</code>.
     */
    @Override
    public void setId(BigInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.nft_balance.id</code>.
     */
    @Override
    public BigInteger getId() {
        return (BigInteger) get(0);
    }

    /**
     * Setter for <code>public.nft_balance.holder_id</code>.
     */
    @Override
    public void setHolderId(BigInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.nft_balance.holder_id</code>.
     */
    @Override
    public BigInteger getHolderId() {
        return (BigInteger) get(1);
    }

    /**
     * Setter for <code>public.nft_balance.fk_nft_entry</code>.
     */
    @Override
    public void setFkNftEntry(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.nft_balance.fk_nft_entry</code>.
     */
    @Override
    public Integer getFkNftEntry() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<BigInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(INftBalance from) {
        setId(from.getId());
        setHolderId(from.getHolderId());
        setFkNftEntry(from.getFkNftEntry());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends INftBalance> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NftBalanceRecord
     */
    public NftBalanceRecord() {
        super(NftBalance.NFT_BALANCE);
    }

    /**
     * Create a detached, initialised NftBalanceRecord
     */
    public NftBalanceRecord(BigInteger id, BigInteger holderId, Integer fkNftEntry) {
        super(NftBalance.NFT_BALANCE);

        setId(id);
        setHolderId(holderId);
        setFkNftEntry(fkNftEntry);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised NftBalanceRecord
     */
    public NftBalanceRecord(com.katbrew.entities.jooq.db.tables.pojos.NftBalance value) {
        super(NftBalance.NFT_BALANCE);

        if (value != null) {
            setId(value.getId());
            setHolderId(value.getHolderId());
            setFkNftEntry(value.getFkNftEntry());
            resetChangedOnNotNull();
        }
    }
}
