/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.pojos;


import com.katbrew.entities.jooq.db.tables.interfaces.INftCollectionEntry;

import java.math.BigInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NftCollectionEntry implements INftCollectionEntry {

    private static final long serialVersionUID = 1L;

    private BigInteger id;
    private BigInteger fkCollection;
    private Integer edition;
    private String image;
    private String name;
    private String description;
    private String attributes;

    public NftCollectionEntry() {}

    public NftCollectionEntry(INftCollectionEntry value) {
        this.id = value.getId();
        this.fkCollection = value.getFkCollection();
        this.edition = value.getEdition();
        this.image = value.getImage();
        this.name = value.getName();
        this.description = value.getDescription();
        this.attributes = value.getAttributes();
    }

    public NftCollectionEntry(
        BigInteger id,
        BigInteger fkCollection,
        Integer edition,
        String image,
        String name,
        String description,
        String attributes
    ) {
        this.id = id;
        this.fkCollection = fkCollection;
        this.edition = edition;
        this.image = image;
        this.name = name;
        this.description = description;
        this.attributes = attributes;
    }

    /**
     * Getter for <code>public.nft_collection_entry.id</code>.
     */
    @Override
    public BigInteger getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.nft_collection_entry.id</code>.
     */
    @Override
    public void setId(BigInteger id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.nft_collection_entry.fk_collection</code>.
     */
    @Override
    public BigInteger getFkCollection() {
        return this.fkCollection;
    }

    /**
     * Setter for <code>public.nft_collection_entry.fk_collection</code>.
     */
    @Override
    public void setFkCollection(BigInteger fkCollection) {
        this.fkCollection = fkCollection;
    }

    /**
     * Getter for <code>public.nft_collection_entry.edition</code>.
     */
    @Override
    public Integer getEdition() {
        return this.edition;
    }

    /**
     * Setter for <code>public.nft_collection_entry.edition</code>.
     */
    @Override
    public void setEdition(Integer edition) {
        this.edition = edition;
    }

    /**
     * Getter for <code>public.nft_collection_entry.image</code>.
     */
    @Override
    public String getImage() {
        return this.image;
    }

    /**
     * Setter for <code>public.nft_collection_entry.image</code>.
     */
    @Override
    public void setImage(String image) {
        this.image = image;
    }

    /**
     * Getter for <code>public.nft_collection_entry.name</code>.
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.nft_collection_entry.name</code>.
     */
    @Override
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.nft_collection_entry.description</code>.
     */
    @Override
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.nft_collection_entry.description</code>.
     */
    @Override
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>public.nft_collection_entry.attributes</code>.
     */
    @Override
    public String getAttributes() {
        return this.attributes;
    }

    /**
     * Setter for <code>public.nft_collection_entry.attributes</code>.
     */
    @Override
    public void setAttributes(String attributes) {
        this.attributes = attributes;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NftCollectionEntry other = (NftCollectionEntry) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.fkCollection == null) {
            if (other.fkCollection != null)
                return false;
        }
        else if (!this.fkCollection.equals(other.fkCollection))
            return false;
        if (this.edition == null) {
            if (other.edition != null)
                return false;
        }
        else if (!this.edition.equals(other.edition))
            return false;
        if (this.image == null) {
            if (other.image != null)
                return false;
        }
        else if (!this.image.equals(other.image))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.attributes == null) {
            if (other.attributes != null)
                return false;
        }
        else if (!this.attributes.equals(other.attributes))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fkCollection == null) ? 0 : this.fkCollection.hashCode());
        result = prime * result + ((this.edition == null) ? 0 : this.edition.hashCode());
        result = prime * result + ((this.image == null) ? 0 : this.image.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.attributes == null) ? 0 : this.attributes.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NftCollectionEntry (");

        sb.append(id);
        sb.append(", ").append(fkCollection);
        sb.append(", ").append(edition);
        sb.append(", ").append(image);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(attributes);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(INftCollectionEntry from) {
        setId(from.getId());
        setFkCollection(from.getFkCollection());
        setEdition(from.getEdition());
        setImage(from.getImage());
        setName(from.getName());
        setDescription(from.getDescription());
        setAttributes(from.getAttributes());
    }

    @Override
    public <E extends INftCollectionEntry> E into(E into) {
        into.from(this);
        return into;
    }
}
