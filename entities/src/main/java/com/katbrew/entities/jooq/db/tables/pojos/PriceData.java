/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.pojos;


import com.katbrew.entities.jooq.db.tables.interfaces.IPriceData;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PriceData implements IPriceData {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Integer fkToken;
    private Double valueKas;
    private Double valueUsd;
    private Double change_24h;
    private LocalDateTime timestamp;

    public PriceData() {}

    public PriceData(IPriceData value) {
        this.id = value.getId();
        this.fkToken = value.getFkToken();
        this.valueKas = value.getValueKas();
        this.valueUsd = value.getValueUsd();
        this.change_24h = value.getChange_24h();
        this.timestamp = value.getTimestamp();
    }

    public PriceData(
        Long id,
        Integer fkToken,
        Double valueKas,
        Double valueUsd,
        Double change_24h,
        LocalDateTime timestamp
    ) {
        this.id = id;
        this.fkToken = fkToken;
        this.valueKas = valueKas;
        this.valueUsd = valueUsd;
        this.change_24h = change_24h;
        this.timestamp = timestamp;
    }

    /**
     * Getter for <code>public.Price_Data.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.Price_Data.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.Price_Data.fk_token</code>.
     */
    @Override
    public Integer getFkToken() {
        return this.fkToken;
    }

    /**
     * Setter for <code>public.Price_Data.fk_token</code>.
     */
    @Override
    public void setFkToken(Integer fkToken) {
        this.fkToken = fkToken;
    }

    /**
     * Getter for <code>public.Price_Data.value_kas</code>.
     */
    @Override
    public Double getValueKas() {
        return this.valueKas;
    }

    /**
     * Setter for <code>public.Price_Data.value_kas</code>.
     */
    @Override
    public void setValueKas(Double valueKas) {
        this.valueKas = valueKas;
    }

    /**
     * Getter for <code>public.Price_Data.value_usd</code>.
     */
    @Override
    public Double getValueUsd() {
        return this.valueUsd;
    }

    /**
     * Setter for <code>public.Price_Data.value_usd</code>.
     */
    @Override
    public void setValueUsd(Double valueUsd) {
        this.valueUsd = valueUsd;
    }

    /**
     * Getter for <code>public.Price_Data.change_24h</code>.
     */
    @Override
    public Double getChange_24h() {
        return this.change_24h;
    }

    /**
     * Setter for <code>public.Price_Data.change_24h</code>.
     */
    @Override
    public void setChange_24h(Double change_24h) {
        this.change_24h = change_24h;
    }

    /**
     * Getter for <code>public.Price_Data.timestamp</code>.
     */
    @Override
    public LocalDateTime getTimestamp() {
        return this.timestamp;
    }

    /**
     * Setter for <code>public.Price_Data.timestamp</code>.
     */
    @Override
    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PriceData other = (PriceData) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.fkToken == null) {
            if (other.fkToken != null)
                return false;
        }
        else if (!this.fkToken.equals(other.fkToken))
            return false;
        if (this.valueKas == null) {
            if (other.valueKas != null)
                return false;
        }
        else if (!this.valueKas.equals(other.valueKas))
            return false;
        if (this.valueUsd == null) {
            if (other.valueUsd != null)
                return false;
        }
        else if (!this.valueUsd.equals(other.valueUsd))
            return false;
        if (this.change_24h == null) {
            if (other.change_24h != null)
                return false;
        }
        else if (!this.change_24h.equals(other.change_24h))
            return false;
        if (this.timestamp == null) {
            if (other.timestamp != null)
                return false;
        }
        else if (!this.timestamp.equals(other.timestamp))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fkToken == null) ? 0 : this.fkToken.hashCode());
        result = prime * result + ((this.valueKas == null) ? 0 : this.valueKas.hashCode());
        result = prime * result + ((this.valueUsd == null) ? 0 : this.valueUsd.hashCode());
        result = prime * result + ((this.change_24h == null) ? 0 : this.change_24h.hashCode());
        result = prime * result + ((this.timestamp == null) ? 0 : this.timestamp.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PriceData (");

        sb.append(id);
        sb.append(", ").append(fkToken);
        sb.append(", ").append(valueKas);
        sb.append(", ").append(valueUsd);
        sb.append(", ").append(change_24h);
        sb.append(", ").append(timestamp);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPriceData from) {
        setId(from.getId());
        setFkToken(from.getFkToken());
        setValueKas(from.getValueKas());
        setValueUsd(from.getValueUsd());
        setChange_24h(from.getChange_24h());
        setTimestamp(from.getTimestamp());
    }

    @Override
    public <E extends IPriceData> E into(E into) {
        into.from(this);
        return into;
    }
}
