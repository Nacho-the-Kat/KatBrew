/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.pojos;


import com.katbrew.entities.jooq.db.tables.interfaces.INftCollection;

import java.math.BigInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NftCollection implements INftCollection {

    private static final long serialVersionUID = 1L;

    private BigInteger id;
    private String tick;
    private String deployer;
    private String buri;
    private String txIdRev;
    private String state;
    private BigInteger max;
    private BigInteger minted;
    private Integer premint;
    private BigInteger daaMintStart;
    private BigInteger mtsAdd;
    private BigInteger opScoreAdd;
    private BigInteger opScoreMod;
    private BigInteger royaltyFee;

    public NftCollection() {}

    public NftCollection(INftCollection value) {
        this.id = value.getId();
        this.tick = value.getTick();
        this.deployer = value.getDeployer();
        this.buri = value.getBuri();
        this.txIdRev = value.getTxIdRev();
        this.state = value.getState();
        this.max = value.getMax();
        this.minted = value.getMinted();
        this.premint = value.getPremint();
        this.daaMintStart = value.getDaaMintStart();
        this.mtsAdd = value.getMtsAdd();
        this.opScoreAdd = value.getOpScoreAdd();
        this.opScoreMod = value.getOpScoreMod();
        this.royaltyFee = value.getRoyaltyFee();
    }

    public NftCollection(
        BigInteger id,
        String tick,
        String deployer,
        String buri,
        String txIdRev,
        String state,
        BigInteger max,
        BigInteger minted,
        Integer premint,
        BigInteger daaMintStart,
        BigInteger mtsAdd,
        BigInteger opScoreAdd,
        BigInteger opScoreMod,
        BigInteger royaltyFee
    ) {
        this.id = id;
        this.tick = tick;
        this.deployer = deployer;
        this.buri = buri;
        this.txIdRev = txIdRev;
        this.state = state;
        this.max = max;
        this.minted = minted;
        this.premint = premint;
        this.daaMintStart = daaMintStart;
        this.mtsAdd = mtsAdd;
        this.opScoreAdd = opScoreAdd;
        this.opScoreMod = opScoreMod;
        this.royaltyFee = royaltyFee;
    }

    /**
     * Getter for <code>public.nft_collection.id</code>.
     */
    @Override
    public BigInteger getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.nft_collection.id</code>.
     */
    @Override
    public void setId(BigInteger id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.nft_collection.tick</code>.
     */
    @Override
    public String getTick() {
        return this.tick;
    }

    /**
     * Setter for <code>public.nft_collection.tick</code>.
     */
    @Override
    public void setTick(String tick) {
        this.tick = tick;
    }

    /**
     * Getter for <code>public.nft_collection.deployer</code>.
     */
    @Override
    public String getDeployer() {
        return this.deployer;
    }

    /**
     * Setter for <code>public.nft_collection.deployer</code>.
     */
    @Override
    public void setDeployer(String deployer) {
        this.deployer = deployer;
    }

    /**
     * Getter for <code>public.nft_collection.buri</code>.
     */
    @Override
    public String getBuri() {
        return this.buri;
    }

    /**
     * Setter for <code>public.nft_collection.buri</code>.
     */
    @Override
    public void setBuri(String buri) {
        this.buri = buri;
    }

    /**
     * Getter for <code>public.nft_collection.tx_id_rev</code>.
     */
    @Override
    public String getTxIdRev() {
        return this.txIdRev;
    }

    /**
     * Setter for <code>public.nft_collection.tx_id_rev</code>.
     */
    @Override
    public void setTxIdRev(String txIdRev) {
        this.txIdRev = txIdRev;
    }

    /**
     * Getter for <code>public.nft_collection.state</code>.
     */
    @Override
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>public.nft_collection.state</code>.
     */
    @Override
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for <code>public.nft_collection.max</code>.
     */
    @Override
    public BigInteger getMax() {
        return this.max;
    }

    /**
     * Setter for <code>public.nft_collection.max</code>.
     */
    @Override
    public void setMax(BigInteger max) {
        this.max = max;
    }

    /**
     * Getter for <code>public.nft_collection.minted</code>.
     */
    @Override
    public BigInteger getMinted() {
        return this.minted;
    }

    /**
     * Setter for <code>public.nft_collection.minted</code>.
     */
    @Override
    public void setMinted(BigInteger minted) {
        this.minted = minted;
    }

    /**
     * Getter for <code>public.nft_collection.premint</code>.
     */
    @Override
    public Integer getPremint() {
        return this.premint;
    }

    /**
     * Setter for <code>public.nft_collection.premint</code>.
     */
    @Override
    public void setPremint(Integer premint) {
        this.premint = premint;
    }

    /**
     * Getter for <code>public.nft_collection.daa_mint_start</code>.
     */
    @Override
    public BigInteger getDaaMintStart() {
        return this.daaMintStart;
    }

    /**
     * Setter for <code>public.nft_collection.daa_mint_start</code>.
     */
    @Override
    public void setDaaMintStart(BigInteger daaMintStart) {
        this.daaMintStart = daaMintStart;
    }

    /**
     * Getter for <code>public.nft_collection.mts_add</code>.
     */
    @Override
    public BigInteger getMtsAdd() {
        return this.mtsAdd;
    }

    /**
     * Setter for <code>public.nft_collection.mts_add</code>.
     */
    @Override
    public void setMtsAdd(BigInteger mtsAdd) {
        this.mtsAdd = mtsAdd;
    }

    /**
     * Getter for <code>public.nft_collection.op_score_add</code>.
     */
    @Override
    public BigInteger getOpScoreAdd() {
        return this.opScoreAdd;
    }

    /**
     * Setter for <code>public.nft_collection.op_score_add</code>.
     */
    @Override
    public void setOpScoreAdd(BigInteger opScoreAdd) {
        this.opScoreAdd = opScoreAdd;
    }

    /**
     * Getter for <code>public.nft_collection.op_score_mod</code>.
     */
    @Override
    public BigInteger getOpScoreMod() {
        return this.opScoreMod;
    }

    /**
     * Setter for <code>public.nft_collection.op_score_mod</code>.
     */
    @Override
    public void setOpScoreMod(BigInteger opScoreMod) {
        this.opScoreMod = opScoreMod;
    }

    /**
     * Getter for <code>public.nft_collection.royalty_fee</code>.
     */
    @Override
    public BigInteger getRoyaltyFee() {
        return this.royaltyFee;
    }

    /**
     * Setter for <code>public.nft_collection.royalty_fee</code>.
     */
    @Override
    public void setRoyaltyFee(BigInteger royaltyFee) {
        this.royaltyFee = royaltyFee;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NftCollection other = (NftCollection) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.tick == null) {
            if (other.tick != null)
                return false;
        }
        else if (!this.tick.equals(other.tick))
            return false;
        if (this.deployer == null) {
            if (other.deployer != null)
                return false;
        }
        else if (!this.deployer.equals(other.deployer))
            return false;
        if (this.buri == null) {
            if (other.buri != null)
                return false;
        }
        else if (!this.buri.equals(other.buri))
            return false;
        if (this.txIdRev == null) {
            if (other.txIdRev != null)
                return false;
        }
        else if (!this.txIdRev.equals(other.txIdRev))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.max == null) {
            if (other.max != null)
                return false;
        }
        else if (!this.max.equals(other.max))
            return false;
        if (this.minted == null) {
            if (other.minted != null)
                return false;
        }
        else if (!this.minted.equals(other.minted))
            return false;
        if (this.premint == null) {
            if (other.premint != null)
                return false;
        }
        else if (!this.premint.equals(other.premint))
            return false;
        if (this.daaMintStart == null) {
            if (other.daaMintStart != null)
                return false;
        }
        else if (!this.daaMintStart.equals(other.daaMintStart))
            return false;
        if (this.mtsAdd == null) {
            if (other.mtsAdd != null)
                return false;
        }
        else if (!this.mtsAdd.equals(other.mtsAdd))
            return false;
        if (this.opScoreAdd == null) {
            if (other.opScoreAdd != null)
                return false;
        }
        else if (!this.opScoreAdd.equals(other.opScoreAdd))
            return false;
        if (this.opScoreMod == null) {
            if (other.opScoreMod != null)
                return false;
        }
        else if (!this.opScoreMod.equals(other.opScoreMod))
            return false;
        if (this.royaltyFee == null) {
            if (other.royaltyFee != null)
                return false;
        }
        else if (!this.royaltyFee.equals(other.royaltyFee))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.tick == null) ? 0 : this.tick.hashCode());
        result = prime * result + ((this.deployer == null) ? 0 : this.deployer.hashCode());
        result = prime * result + ((this.buri == null) ? 0 : this.buri.hashCode());
        result = prime * result + ((this.txIdRev == null) ? 0 : this.txIdRev.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.max == null) ? 0 : this.max.hashCode());
        result = prime * result + ((this.minted == null) ? 0 : this.minted.hashCode());
        result = prime * result + ((this.premint == null) ? 0 : this.premint.hashCode());
        result = prime * result + ((this.daaMintStart == null) ? 0 : this.daaMintStart.hashCode());
        result = prime * result + ((this.mtsAdd == null) ? 0 : this.mtsAdd.hashCode());
        result = prime * result + ((this.opScoreAdd == null) ? 0 : this.opScoreAdd.hashCode());
        result = prime * result + ((this.opScoreMod == null) ? 0 : this.opScoreMod.hashCode());
        result = prime * result + ((this.royaltyFee == null) ? 0 : this.royaltyFee.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NftCollection (");

        sb.append(id);
        sb.append(", ").append(tick);
        sb.append(", ").append(deployer);
        sb.append(", ").append(buri);
        sb.append(", ").append(txIdRev);
        sb.append(", ").append(state);
        sb.append(", ").append(max);
        sb.append(", ").append(minted);
        sb.append(", ").append(premint);
        sb.append(", ").append(daaMintStart);
        sb.append(", ").append(mtsAdd);
        sb.append(", ").append(opScoreAdd);
        sb.append(", ").append(opScoreMod);
        sb.append(", ").append(royaltyFee);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(INftCollection from) {
        setId(from.getId());
        setTick(from.getTick());
        setDeployer(from.getDeployer());
        setBuri(from.getBuri());
        setTxIdRev(from.getTxIdRev());
        setState(from.getState());
        setMax(from.getMax());
        setMinted(from.getMinted());
        setPremint(from.getPremint());
        setDaaMintStart(from.getDaaMintStart());
        setMtsAdd(from.getMtsAdd());
        setOpScoreAdd(from.getOpScoreAdd());
        setOpScoreMod(from.getOpScoreMod());
        setRoyaltyFee(from.getRoyaltyFee());
    }

    @Override
    public <E extends INftCollection> E into(E into) {
        into.from(this);
        return into;
    }
}
