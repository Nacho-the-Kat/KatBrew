/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.pojos;


import com.katbrew.entities.jooq.db.tables.interfaces.ICodeWordings;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CodeWordings implements ICodeWordings {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String identifier;

    public CodeWordings() {}

    public CodeWordings(ICodeWordings value) {
        this.id = value.getId();
        this.identifier = value.getIdentifier();
    }

    public CodeWordings(
        Integer id,
        String identifier
    ) {
        this.id = id;
        this.identifier = identifier;
    }

    /**
     * Getter for <code>public.code_wordings.id</code>.
     */
    @Override
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.code_wordings.id</code>.
     */
    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.code_wordings.identifier</code>.
     */
    @Override
    public String getIdentifier() {
        return this.identifier;
    }

    /**
     * Setter for <code>public.code_wordings.identifier</code>.
     */
    @Override
    public void setIdentifier(String identifier) {
        this.identifier = identifier;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CodeWordings other = (CodeWordings) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.identifier == null) {
            if (other.identifier != null)
                return false;
        }
        else if (!this.identifier.equals(other.identifier))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.identifier == null) ? 0 : this.identifier.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CodeWordings (");

        sb.append(id);
        sb.append(", ").append(identifier);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICodeWordings from) {
        setId(from.getId());
        setIdentifier(from.getIdentifier());
    }

    @Override
    public <E extends ICodeWordings> E into(E into) {
        into.from(this);
        return into;
    }
}
