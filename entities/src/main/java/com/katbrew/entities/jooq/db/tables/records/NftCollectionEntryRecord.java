/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.records;


import com.katbrew.entities.jooq.db.tables.NftCollectionEntry;
import com.katbrew.entities.jooq.db.tables.interfaces.INftCollectionEntry;

import java.math.BigInteger;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NftCollectionEntryRecord extends UpdatableRecordImpl<NftCollectionEntryRecord> implements INftCollectionEntry {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.nft_collection_entry.id</code>.
     */
    @Override
    public void setId(BigInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.nft_collection_entry.id</code>.
     */
    @Override
    public BigInteger getId() {
        return (BigInteger) get(0);
    }

    /**
     * Setter for <code>public.nft_collection_entry.fk_collection</code>.
     */
    @Override
    public void setFkCollection(BigInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.nft_collection_entry.fk_collection</code>.
     */
    @Override
    public BigInteger getFkCollection() {
        return (BigInteger) get(1);
    }

    /**
     * Setter for <code>public.nft_collection_entry.edition</code>.
     */
    @Override
    public void setEdition(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.nft_collection_entry.edition</code>.
     */
    @Override
    public Integer getEdition() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.nft_collection_entry.image</code>.
     */
    @Override
    public void setImage(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.nft_collection_entry.image</code>.
     */
    @Override
    public String getImage() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.nft_collection_entry.name</code>.
     */
    @Override
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.nft_collection_entry.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.nft_collection_entry.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.nft_collection_entry.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.nft_collection_entry.attributes</code>.
     */
    @Override
    public void setAttributes(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.nft_collection_entry.attributes</code>.
     */
    @Override
    public String getAttributes() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.nft_collection_entry.fk_holder</code>.
     */
    @Override
    public void setFkHolder(BigInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.nft_collection_entry.fk_holder</code>.
     */
    @Override
    public BigInteger getFkHolder() {
        return (BigInteger) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<BigInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(INftCollectionEntry from) {
        setId(from.getId());
        setFkCollection(from.getFkCollection());
        setEdition(from.getEdition());
        setImage(from.getImage());
        setName(from.getName());
        setDescription(from.getDescription());
        setAttributes(from.getAttributes());
        setFkHolder(from.getFkHolder());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends INftCollectionEntry> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NftCollectionEntryRecord
     */
    public NftCollectionEntryRecord() {
        super(NftCollectionEntry.NFT_COLLECTION_ENTRY);
    }

    /**
     * Create a detached, initialised NftCollectionEntryRecord
     */
    public NftCollectionEntryRecord(BigInteger id, BigInteger fkCollection, Integer edition, String image, String name, String description, String attributes, BigInteger fkHolder) {
        super(NftCollectionEntry.NFT_COLLECTION_ENTRY);

        setId(id);
        setFkCollection(fkCollection);
        setEdition(edition);
        setImage(image);
        setName(name);
        setDescription(description);
        setAttributes(attributes);
        setFkHolder(fkHolder);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised NftCollectionEntryRecord
     */
    public NftCollectionEntryRecord(com.katbrew.entities.jooq.db.tables.pojos.NftCollectionEntry value) {
        super(NftCollectionEntry.NFT_COLLECTION_ENTRY);

        if (value != null) {
            setId(value.getId());
            setFkCollection(value.getFkCollection());
            setEdition(value.getEdition());
            setImage(value.getImage());
            setName(value.getName());
            setDescription(value.getDescription());
            setAttributes(value.getAttributes());
            setFkHolder(value.getFkHolder());
            resetChangedOnNotNull();
        }
    }
}
