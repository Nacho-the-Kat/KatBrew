/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.daos;


import com.katbrew.entities.jooq.db.tables.NftTransaction;
import com.katbrew.entities.jooq.db.tables.records.NftTransactionRecord;

import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.AutoConverter;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NftTransactionDao extends DAOImpl<NftTransactionRecord, com.katbrew.entities.jooq.db.tables.pojos.NftTransaction, BigInteger> {

    /**
     * Create a new NftTransactionDao without any configuration
     */
    public NftTransactionDao() {
        super(NftTransaction.NFT_TRANSACTION, com.katbrew.entities.jooq.db.tables.pojos.NftTransaction.class);
    }

    /**
     * Create a new NftTransactionDao with an attached configuration
     */
    public NftTransactionDao(Configuration configuration) {
        super(NftTransaction.NFT_TRANSACTION, com.katbrew.entities.jooq.db.tables.pojos.NftTransaction.class, configuration);
    }

    @Override
    public BigInteger getId(com.katbrew.entities.jooq.db.tables.pojos.NftTransaction object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfId(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchById(BigInteger... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.katbrew.entities.jooq.db.tables.pojos.NftTransaction fetchOneById(BigInteger value) {
        return fetchOne(NftTransaction.NFT_TRANSACTION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchOptionalById(BigInteger value) {
        return fetchOptional(NftTransaction.NFT_TRANSACTION.ID, value);
    }

    /**
     * Fetch records that have <code>p BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfP(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.P, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>p IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByP(String... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.P, values);
    }

    /**
     * Fetch records that have <code>op BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfOp(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.OP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>op IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByOp(String... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.OP, values);
    }

    /**
     * Fetch records that have <code>deployer BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfDeployer(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.DEPLOYER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deployer IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByDeployer(BigInteger... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.DEPLOYER, values);
    }

    /**
     * Fetch records that have <code>to_address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfToAddress(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.TO_ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>to_address IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByToAddress(BigInteger... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.TO_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>fk_nft_collection BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfFkNftCollection(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.FK_NFT_COLLECTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fk_nft_collection IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByFkNftCollection(BigInteger... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.FK_NFT_COLLECTION, values);
    }

    /**
     * Fetch records that have <code>transaction_tick BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfTransactionTick(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.TRANSACTION_TICK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_tick IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByTransactionTick(String... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.TRANSACTION_TICK, values);
    }

    /**
     * Fetch records that have <code>op_data BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfOpData(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.OP_DATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>op_data IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByOpData(String... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.OP_DATA, values);
    }

    /**
     * Fetch records that have <code>op_score BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfOpScore(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.OP_SCORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>op_score IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByOpScore(BigInteger... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.OP_SCORE, values);
    }

    /**
     * Fetch records that have <code>tx_id_rev BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfTxIdRev(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.TX_ID_REV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_id_rev IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByTxIdRev(String... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.TX_ID_REV, values);
    }

    /**
     * Fetch a unique record that has <code>tx_id_rev = value</code>
     */
    public com.katbrew.entities.jooq.db.tables.pojos.NftTransaction fetchOneByTxIdRev(String value) {
        return fetchOne(NftTransaction.NFT_TRANSACTION.TX_ID_REV, value);
    }

    /**
     * Fetch a unique record that has <code>tx_id_rev = value</code>
     */
    public Optional<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchOptionalByTxIdRev(String value) {
        return fetchOptional(NftTransaction.NFT_TRANSACTION.TX_ID_REV, value);
    }

    /**
     * Fetch records that have <code>op_error BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfOpError(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.OP_ERROR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>op_error IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByOpError(String... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.OP_ERROR, values);
    }

    /**
     * Fetch records that have <code>mts_add BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfMtsAdd(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.MTS_ADD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mts_add IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByMtsAdd(BigInteger... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.MTS_ADD, values);
    }

    /**
     * Fetch records that have <code>fee_rev BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchRangeOfFeeRev(String lowerInclusive, String upperInclusive) {
        return fetchRange(NftTransaction.NFT_TRANSACTION.FEE_REV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fee_rev IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.NftTransaction> fetchByFeeRev(String... values) {
        return fetch(NftTransaction.NFT_TRANSACTION.FEE_REV, values);
    }
}
