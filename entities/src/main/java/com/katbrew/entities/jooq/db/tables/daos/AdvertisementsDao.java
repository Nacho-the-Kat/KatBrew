/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.daos;


import com.katbrew.entities.jooq.db.tables.Advertisements;
import com.katbrew.entities.jooq.db.tables.records.AdvertisementsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdvertisementsDao extends DAOImpl<AdvertisementsRecord, com.katbrew.entities.jooq.db.tables.pojos.Advertisements, Integer> {

    /**
     * Create a new AdvertisementsDao without any configuration
     */
    public AdvertisementsDao() {
        super(Advertisements.ADVERTISEMENTS, com.katbrew.entities.jooq.db.tables.pojos.Advertisements.class);
    }

    /**
     * Create a new AdvertisementsDao with an attached configuration
     */
    public AdvertisementsDao(Configuration configuration) {
        super(Advertisements.ADVERTISEMENTS, com.katbrew.entities.jooq.db.tables.pojos.Advertisements.class, configuration);
    }

    @Override
    public Integer getId(com.katbrew.entities.jooq.db.tables.pojos.Advertisements object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Advertisements.ADVERTISEMENTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchById(Integer... values) {
        return fetch(Advertisements.ADVERTISEMENTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.katbrew.entities.jooq.db.tables.pojos.Advertisements fetchOneById(Integer value) {
        return fetchOne(Advertisements.ADVERTISEMENTS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchOptionalById(Integer value) {
        return fetchOptional(Advertisements.ADVERTISEMENTS.ID, value);
    }

    /**
     * Fetch records that have <code>link BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchRangeOfLink(String lowerInclusive, String upperInclusive) {
        return fetchRange(Advertisements.ADVERTISEMENTS.LINK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>link IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchByLink(String... values) {
        return fetch(Advertisements.ADVERTISEMENTS.LINK, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchRangeOfActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Advertisements.ADVERTISEMENTS.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchByActive(Boolean... values) {
        return fetch(Advertisements.ADVERTISEMENTS.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>show_until BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchRangeOfShowUntil(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Advertisements.ADVERTISEMENTS.SHOW_UNTIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>show_until IN (values)</code>
     */
    public List<com.katbrew.entities.jooq.db.tables.pojos.Advertisements> fetchByShowUntil(LocalDateTime... values) {
        return fetch(Advertisements.ADVERTISEMENTS.SHOW_UNTIL, values);
    }
}
