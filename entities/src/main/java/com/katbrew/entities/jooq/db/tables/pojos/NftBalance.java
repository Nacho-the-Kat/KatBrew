/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.pojos;


import com.katbrew.entities.jooq.db.tables.interfaces.INftBalance;

import java.math.BigInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NftBalance implements INftBalance {

    private static final long serialVersionUID = 1L;

    private BigInteger id;
    private BigInteger holderId;
    private Integer fkNftEntry;

    public NftBalance() {}

    public NftBalance(INftBalance value) {
        this.id = value.getId();
        this.holderId = value.getHolderId();
        this.fkNftEntry = value.getFkNftEntry();
    }

    public NftBalance(
        BigInteger id,
        BigInteger holderId,
        Integer fkNftEntry
    ) {
        this.id = id;
        this.holderId = holderId;
        this.fkNftEntry = fkNftEntry;
    }

    /**
     * Getter for <code>public.nft_balance.id</code>.
     */
    @Override
    public BigInteger getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.nft_balance.id</code>.
     */
    @Override
    public void setId(BigInteger id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.nft_balance.holder_id</code>.
     */
    @Override
    public BigInteger getHolderId() {
        return this.holderId;
    }

    /**
     * Setter for <code>public.nft_balance.holder_id</code>.
     */
    @Override
    public void setHolderId(BigInteger holderId) {
        this.holderId = holderId;
    }

    /**
     * Getter for <code>public.nft_balance.fk_nft_entry</code>.
     */
    @Override
    public Integer getFkNftEntry() {
        return this.fkNftEntry;
    }

    /**
     * Setter for <code>public.nft_balance.fk_nft_entry</code>.
     */
    @Override
    public void setFkNftEntry(Integer fkNftEntry) {
        this.fkNftEntry = fkNftEntry;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NftBalance other = (NftBalance) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.holderId == null) {
            if (other.holderId != null)
                return false;
        }
        else if (!this.holderId.equals(other.holderId))
            return false;
        if (this.fkNftEntry == null) {
            if (other.fkNftEntry != null)
                return false;
        }
        else if (!this.fkNftEntry.equals(other.fkNftEntry))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.holderId == null) ? 0 : this.holderId.hashCode());
        result = prime * result + ((this.fkNftEntry == null) ? 0 : this.fkNftEntry.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NftBalance (");

        sb.append(id);
        sb.append(", ").append(holderId);
        sb.append(", ").append(fkNftEntry);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(INftBalance from) {
        setId(from.getId());
        setHolderId(from.getHolderId());
        setFkNftEntry(from.getFkNftEntry());
    }

    @Override
    public <E extends INftBalance> E into(E into) {
        into.from(this);
        return into;
    }
}
