/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db;


import com.katbrew.entities.jooq.db.tables.Advertisements;
import com.katbrew.entities.jooq.db.tables.Announcements;
import com.katbrew.entities.jooq.db.tables.Balance;
import com.katbrew.entities.jooq.db.tables.FetchData;
import com.katbrew.entities.jooq.db.tables.Holder;
import com.katbrew.entities.jooq.db.tables.LastUpdate;
import com.katbrew.entities.jooq.db.tables.NftBalance;
import com.katbrew.entities.jooq.db.tables.NftCollection;
import com.katbrew.entities.jooq.db.tables.NftCollectionEntry;
import com.katbrew.entities.jooq.db.tables.NftCollectionInfo;
import com.katbrew.entities.jooq.db.tables.NftTransaction;
import com.katbrew.entities.jooq.db.tables.PriceData;
import com.katbrew.entities.jooq.db.tables.Token;
import com.katbrew.entities.jooq.db.tables.TopHolder;
import com.katbrew.entities.jooq.db.tables.Transaction;
import com.katbrew.entities.jooq.db.tables.Users;
import com.katbrew.entities.jooq.db.tables.Whitelist;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.Advertisements</code>.
     */
    public final Advertisements ADVERTISEMENTS = Advertisements.ADVERTISEMENTS;

    /**
     * The table <code>public.Announcements</code>.
     */
    public final Announcements ANNOUNCEMENTS = Announcements.ANNOUNCEMENTS;

    /**
     * The table <code>public.Balance</code>.
     */
    public final Balance BALANCE = Balance.BALANCE;

    /**
     * The table <code>public.fetch_data</code>.
     */
    public final FetchData FETCH_DATA = FetchData.FETCH_DATA;

    /**
     * The table <code>public.Holder</code>.
     */
    public final Holder HOLDER = Holder.HOLDER;

    /**
     * The table <code>public.Last_Update</code>.
     */
    public final LastUpdate LAST_UPDATE = LastUpdate.LAST_UPDATE;

    /**
     * The table <code>public.nft_balance</code>.
     */
    public final NftBalance NFT_BALANCE = NftBalance.NFT_BALANCE;

    /**
     * The table <code>public.nft_collection</code>.
     */
    public final NftCollection NFT_COLLECTION = NftCollection.NFT_COLLECTION;

    /**
     * The table <code>public.nft_collection_entry</code>.
     */
    public final NftCollectionEntry NFT_COLLECTION_ENTRY = NftCollectionEntry.NFT_COLLECTION_ENTRY;

    /**
     * The table <code>public.nft_collection_info</code>.
     */
    public final NftCollectionInfo NFT_COLLECTION_INFO = NftCollectionInfo.NFT_COLLECTION_INFO;

    /**
     * The table <code>public.nft_transaction</code>.
     */
    public final NftTransaction NFT_TRANSACTION = NftTransaction.NFT_TRANSACTION;

    /**
     * The table <code>public.Price_Data</code>.
     */
    public final PriceData PRICE_DATA = PriceData.PRICE_DATA;

    /**
     * The table <code>public.Token</code>.
     */
    public final Token TOKEN = Token.TOKEN;

    /**
     * The table <code>public.Top_Holder</code>.
     */
    public final TopHolder TOP_HOLDER = TopHolder.TOP_HOLDER;

    /**
     * The table <code>public.Transaction</code>.
     */
    public final Transaction TRANSACTION = Transaction.TRANSACTION;

    /**
     * The table <code>public.Users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * The table <code>public.Whitelist</code>.
     */
    public final Whitelist WHITELIST = Whitelist.WHITELIST;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Advertisements.ADVERTISEMENTS,
            Announcements.ANNOUNCEMENTS,
            Balance.BALANCE,
            FetchData.FETCH_DATA,
            Holder.HOLDER,
            LastUpdate.LAST_UPDATE,
            NftBalance.NFT_BALANCE,
            NftCollection.NFT_COLLECTION,
            NftCollectionEntry.NFT_COLLECTION_ENTRY,
            NftCollectionInfo.NFT_COLLECTION_INFO,
            NftTransaction.NFT_TRANSACTION,
            PriceData.PRICE_DATA,
            Token.TOKEN,
            TopHolder.TOP_HOLDER,
            Transaction.TRANSACTION,
            Users.USERS,
            Whitelist.WHITELIST
        );
    }
}
