/*
 * This file is generated by jOOQ.
 */
package com.katbrew.entities.jooq.db.tables.interfaces;


import java.io.Serializable;
import java.math.BigInteger;

import org.jooq.impl.AutoConverter;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public interface INftCollection extends Serializable {

    /**
     * Setter for <code>public.nft_collection.id</code>.
     */
    public void setId(BigInteger value);

    /**
     * Getter for <code>public.nft_collection.id</code>.
     */
    public BigInteger getId();

    /**
     * Setter for <code>public.nft_collection.tick</code>.
     */
    public void setTick(String value);

    /**
     * Getter for <code>public.nft_collection.tick</code>.
     */
    public String getTick();

    /**
     * Setter for <code>public.nft_collection.deployer</code>.
     */
    public void setDeployer(String value);

    /**
     * Getter for <code>public.nft_collection.deployer</code>.
     */
    public String getDeployer();

    /**
     * Setter for <code>public.nft_collection.buri</code>.
     */
    public void setBuri(String value);

    /**
     * Getter for <code>public.nft_collection.buri</code>.
     */
    public String getBuri();

    /**
     * Setter for <code>public.nft_collection.tx_id_rev</code>.
     */
    public void setTxIdRev(String value);

    /**
     * Getter for <code>public.nft_collection.tx_id_rev</code>.
     */
    public String getTxIdRev();

    /**
     * Setter for <code>public.nft_collection.state</code>.
     */
    public void setState(String value);

    /**
     * Getter for <code>public.nft_collection.state</code>.
     */
    public String getState();

    /**
     * Setter for <code>public.nft_collection.max</code>.
     */
    public void setMax(BigInteger value);

    /**
     * Getter for <code>public.nft_collection.max</code>.
     */
    public BigInteger getMax();

    /**
     * Setter for <code>public.nft_collection.minted</code>.
     */
    public void setMinted(BigInteger value);

    /**
     * Getter for <code>public.nft_collection.minted</code>.
     */
    public BigInteger getMinted();

    /**
     * Setter for <code>public.nft_collection.premint</code>.
     */
    public void setPremint(Integer value);

    /**
     * Getter for <code>public.nft_collection.premint</code>.
     */
    public Integer getPremint();

    /**
     * Setter for <code>public.nft_collection.daa_mint_start</code>.
     */
    public void setDaaMintStart(BigInteger value);

    /**
     * Getter for <code>public.nft_collection.daa_mint_start</code>.
     */
    public BigInteger getDaaMintStart();

    /**
     * Setter for <code>public.nft_collection.mts_add</code>.
     */
    public void setMtsAdd(BigInteger value);

    /**
     * Getter for <code>public.nft_collection.mts_add</code>.
     */
    public BigInteger getMtsAdd();

    /**
     * Setter for <code>public.nft_collection.op_score_add</code>.
     */
    public void setOpScoreAdd(BigInteger value);

    /**
     * Getter for <code>public.nft_collection.op_score_add</code>.
     */
    public BigInteger getOpScoreAdd();

    /**
     * Setter for <code>public.nft_collection.op_score_mod</code>.
     */
    public void setOpScoreMod(BigInteger value);

    /**
     * Getter for <code>public.nft_collection.op_score_mod</code>.
     */
    public BigInteger getOpScoreMod();

    /**
     * Setter for <code>public.nft_collection.royalty_fee</code>.
     */
    public void setRoyaltyFee(BigInteger value);

    /**
     * Getter for <code>public.nft_collection.royalty_fee</code>.
     */
    public BigInteger getRoyaltyFee();

    /**
     * Setter for <code>public.nft_collection.completed</code>.
     */
    public void setCompleted(Boolean value);

    /**
     * Getter for <code>public.nft_collection.completed</code>.
     */
    public Boolean getCompleted();

    /**
     * Setter for <code>public.nft_collection.logo</code>.
     */
    public void setLogo(String value);

    /**
     * Getter for <code>public.nft_collection.logo</code>.
     */
    public String getLogo();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface INftCollection
     */
    public void from(INftCollection from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface INftCollection
     */
    public <E extends INftCollection> E into(E into);
}
